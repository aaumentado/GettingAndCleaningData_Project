?Startup
Sys.getenv("MYSQL_HOME")
install.packages("RMySQL")
library()
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show database;"); dbDisconnect(ucscDb)
result <- dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb)
result
hg19 <- dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19, "affyU133Plus2")
allTables
head(allTables)
dbListFields(hg19, "affyU133Plus2")
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
dbGetQuery(hg19, "select bin from affyU133Plus2")
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2")
head(affyData)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
affyMisSmall <- fetch(query, n=10); dbClearResult(query)
dim(affyMisSmall)
head(affyMisSmall)
dbDisconnect(hg19)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
dir()
created
created = h5createGroup("example.h5", "foo")
created = h5createGroup("example.h5", "baa")
created = h5createGroup("example.h5", "foo/foobaa")
h5ls("example.h5")
A = matrix(1:10, nr=5, nc=2)
h5write(A, "example.h5", "foo/A")
h5ls("example.h5")
B = array(seq(0.1, 2.0, by=0.1), dim=c(5,2,2))
B
?attr
attr(B, "scale") <- "liter"
attr(B, "scale")
h5write(B, "example.h5","foo/foobaa/B")
h5ls("example.h5")
B
df = data.frame(1L:5L, seq(0,1,length.out=5), c("ab","cde","fghi","a","s"), stringsAsFactors=FALSE)
h5write(df, "example.h5","df")
h5ls("example.h5")
readA = h5read("example.h5", "foo/A")
readA
readB = h5read("example.h5", "foo/foobaa/B")
readdf = h5read("example.h5","df")
readdf
h5write(c(12,13,14),"example.h5","foo/A",index=list(1:3,1))
h5read("example.h5","foo/A")
h5read("example.h5","foo/A", index=list(1:3,1))
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
close(con)
htmlCode
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
library(XML)
html <- htmlTreeParse(url, useInternalNodes=T)
xpathSApply(html, "//title", xmlValue)
xpathSApply(html, "//td[@='col-citedby']", xmlValue)
xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
html
?XML
??XML
rootNode <- xmlRoot(html)
rootNode
html[1]
html[[1]]
rootNode[[1]]
library(httr); html2 = GET(url)
content2 = content(html2, as="text")
parsedHtml = htmlParse(content2, asText=T)
xpathSApply(parsedHtml, "//title", xmlValue)
parsedHtml
pg1 = GET("http://httpbin.org/basic-auth/user/passwd")
pg1
pg2 = GET("http://httpbin.org/basic-auth/user/passwd", authenticate("user","passwd"))
pg2
names(pg2)
content(pg2)
google = handle("http://google.com")
pg1 = GET(handle=google,path="/")
quite
quit()
getwd()
dir()
setwd("Project")
dir()
setwd("UCI HAR Dataset")
dir()
setwd("test")
dir()
setwd("Inertial Signals")
dir()
body_acc_x_test <- read.table("body_acc_x_test.txt", "\t")
body_acc_x_test <- read.table("body_acc_x_test.txt", sep="\t")
head(body_acc_x_test)
?read.txt
?read.table
body_acc_x_test <- read.delim("body_acc_x_test.txt")
head(body_acc_x_test)
body_acc_x_test <- read.delim2("body_acc_x_test.txt")
body_acc_x_test
body_acc_x_test[1]
dim(body_acc_x_test)
setwd("..")
subject_test <- read.delim("subject_test.txt")
head(subject_test)
dim(subject_test)
subject_test[1:10,]
subject_test[,1]
range(subject_test)
subject_test <- read.delim("../train/subject_train.txt")
subject_test <- read.delim("subject_test.txt")
subject_train <- read.delim("../train/subject_test.txt")
subject_train <- read.delim("../train/subject_train.txt")
head(subject_train)
range(subject_train)
?rbind
subject_merge <- rbind(subject_test, subject_train)
?rbind
?data.frame
?cbind
subject_merge <- rbind(subject_test, subject_train)
?match.names
??match.names
dim(subject_train)
body_acc_x_test <- read.delim("body_acc_x_test.txt")
X_test <- read.delim("X_test.tx")
X_test <- read.delim("X_test.txt")
?head
head(X_test)
X_test[1,2]
X_test <- read.table("X_test.txt", sep = " ")
X_test <- read.table("X_test.txt", sep = "")
dim(X_test)
?read.table
head(X_test)
X_test <- read.table("X_test.txt")
X_test[1:10, 1]
X_test[1:10, 2]
X_test[1:10, c(1,2)]
subject_test <- read.table("subject_test.txt")
cbind(subject_test, X_test)
HAR_test_data <- cbind(subject_test, X_test)
HAR_test_data[1:10, c(1,3,5)]
str(HAR_test_data)
summary(HAR_test_data)
?factor
f <- levels(HAR_test_data)
f
?levels
?factor
?gl
split(HAR_test_data, HAR_test_data$V1)
test <- split(HAR_test_data, HAR_test_data[,1])
test
names(test)
dim(test$2)
test$2
head(test)
class(dim)
?split
class(test)
test[1]
test[1,1]
?list
test[2[1,1]]
test[2]
?tapply
mean_val <- sapply(test, mean)
mean_val <- sapply(as.numeric(test), mean)
test[2]
two <- HAR_test_data[HAR_test_data == 2, 1]
two
two <- HAR_test_data[HAR_test_data == 2, 2]
two
two <- HAR_test_data[HAR_test_data == 2, V1]
two <- HAR_test_data[HAR_test_data == 2, "VQ"]
two <- HAR_test_data[HAR_test_data == 2, "V1"]
two
two <- HAR_test_data[HAR_test_data == 2, "V2"]
two
y_test <- read.table("y_test.txt")
HAR_test_data <- cbind(subject_test, y_test, X_test)
HAR_test_data[1:5, 1:3]
?data.frame
dir()
dir("..")
features_names <- read.table("../features.txt")
X_test <- read.table("X_test.txt", col.names = features_names[,1])
names(X_test)
X_test <- read.table("X_test.txt", col.names = features_names[,2])
names(X_test)
X_test$["angle.X.gravityMean"]
X_test["angle.X.gravityMean"]
X_test["angle.X.gravityMean."]
??wildcard
??regex
names(HAR_test_data)
names(X_test_data)
names(X_test)
mean_value <- X_test[,"*mean*"]
?like
??like
??regex
??string
feature_names <- names(X_test)
feature_mean_names <- feature_name[charmatch("mean", feature_name)]
feature_mean_names <- feature_names[charmatch("mean", feature_names)]
dim(feature_mean_names)
feature_names
charmatch("mean", feature_names)
class(feature_names)
feature_mean_names <- feature_names[pmatch("mean", feature_names)]
dim(feature_mean_names)
?grep
feature_mean_names <- feature_names[grep("mean", feature_names)]
feature_mean_names
dim(feature_names)
dim(feature_mean_names)
?dim
length(feature_mean_names)
?grep
feature_mean_names <- feature_names[grep("mean", feature_names, fixed=T)]
length(feature_mean_names)
feature_std_names <- feature_names[grep("std", feature_names, fixed=T)]
length(feature_std_names)
X_test_stats <- X_test[,c(feature_mean_names, feature_std_names)]
dim(X_test_stats)
names(X_test_stats)
X_test_stats[1]
ls()
subject_test <- read.table("subject_test.txt")
subject_train <- read.table("./train/subject_train.txt")
subject_train <- read.table("../train/subject_train.txt")
subject_merge <- rbind(subject_test, subject_merge)
subject_merge <- rbind(subject_test, subject_train)
nrows(subject_merge) = nrows(subject_test) + nrows(subject_train)
nrow(subject_merge) = nrow(subject_test) + nrow(subject_train)
nrow(subject_merge) == nrow(subject_test) + nrow(subject_train)
